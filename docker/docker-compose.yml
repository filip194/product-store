services:
  postgres:
    container_name: postgres
    image: postgres:17
    environment:
      - POSTGRES_PORT=${PG_DB_PORT}
      - POSTGRES_USER=${PG_DB_USER}
      - POSTGRES_PASSWORD=${PG_DB_PASSWORD}
      - APP_DB=${APP_PG_DB_NAME}
      - APP_DB_SCHEMA=${APP_PG_DB_SCHEMA}
      - APP_DB_USER=${APP_PG_DB_USER}
      - APP_DB_PASSWORD=${APP_PG_DB_PASSWORD}
    volumes:
      - ./database/scripts/:/docker-entrypoint-initdb.d/
    ports:
      - "5342:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "postgres", "-U", "root"]
      timeout: 5s
      interval: 10s
      retries: 10
    restart: "no"
    networks:
      - product-store-network
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
  product-store:
    container_name: product-store
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    image: product-store:latest
    environment:
      - SPRING_PROFILES_ACTIVE=postgresql
      - PG_DB_HOST=postgres
      - PG_DB_PORT=5432
      - PG_DB_USER=${PG_DB_USER}
      - PG_DB_PASSWORD=${PG_DB_PASSWORD}
      - APP_PG_DB_NAME=${APP_PG_DB_NAME}
      - APP_PG_DB_SCHEMA=${APP_PG_DB_SCHEMA}
      - APP_PG_DB_USER=${APP_PG_DB_USER}
      - APP_PG_DB_PASSWORD=${APP_PG_DB_PASSWORD}
      - SERVER_PORT=8080
      - MANAGEMENT_SERVER_PORT=8081
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - product-store-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
networks:
  product-store-network:
    driver: bridge
